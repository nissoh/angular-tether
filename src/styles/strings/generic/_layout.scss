// Grid System
// -----------

$gridColumns:                      12 !default;

@mixin container-fixed() {
	margin-right: auto;
	margin-left: auto;
	@include clearfix();
}

@mixin grid-Que($Que, $method : width) {
	#{$method}: percentage($Que / $gridColumns);
}


@mixin grid-offset($columns) {
	@for $i from 1 through $gridColumns {
		.offset#{$i} {
			@include grid-Que($i, margin-left);
		}
	}
}

@mixin createGutter($selector, $top, $leftRight: $top, $bottom : $top) {
	.Grid__#{unquote($selector)} {
		padding-#{htmlDirection-rev()}: #{$leftRight};
		padding-top: #{$top};

		> [class*="Grid__que"] {
			padding-#{htmlDirection()}: #{$leftRight};
			padding-bottom: #{$bottom};
		}
	}
	.container > .Grid__#{unquote($selector)} {
		margin-#{htmlDirection()}: -#{$leftRight};
		margin-#{htmlDirection-rev()}: -#{$leftRight};
	}


	.Grid__#{unquote($selector)}-inner {
		margin-#{htmlDirection()}: -#{$leftRight};
		> [class*="Grid__que"] {
			padding-#{htmlDirection()}: #{$leftRight};
		}
	}

	.padding-#{unquote($selector)} {
		padding: #{$top} #{$leftRight} #{$bottom}
	}
	.Flex__#{unquote($selector)}-inner {
		.Flex__inline, .Flex__rev, .Flex__fluid {
			padding-#{htmlDirection()}: #{$leftRight};
			&:first-child {
				padding-#{htmlDirection()}: 0;
			}
		}
	}
}
// Spacebox. Predefined semantic layout spacing
@mixin spaceBox($selector, $size) {
	$selector: unquote($selector);
	// top, bottom, topBottom
	.Spacebox__t-#{$selector} {    padding-top: #{$size}; }
	.Spacebox__b-#{$selector} {    padding-bottom: #{$size}; }
	.Spacebox__tb-#{$selector} {   padding-top: #{$size}; padding-bottom: #{$size};}

	// left, right, leftRight
	.Spacebox__l-#{$selector} {    padding-#{htmlDirection()}: #{$size}; }
	.Spacebox__r-#{$selector} {    padding-#{htmlDirection-rev()}: #{$size}; }
	.Spacebox__lr-#{$selector} {   padding-#{htmlDirection-rev()}: #{$size}; padding-#{htmlDirection()}: #{$size}; }

	.Spacebox__#{$selector} {
		padding: #{$size}
	}

	.Spacebox__verti-#{$selector} {
		@extend .Spacebox__t-#{$selector};
	}

	// inner box spacing. for performance sake we use limited selectors
	.Spacebox__inner-horiz-#{$selector} {
		margin-#{htmlDirection()}: -#{$size};
		> * { padding-#{htmlDirection()}: #{$size}; ; }
	}
}

.Spacebox__flat   { padding: 0 !important; }

.Spacebox__flat-l { padding-#{htmlDirection()}: 0 !important; }
.Spacebox__flat-r { padding-#{htmlDirection-rev()}: 0 !important; }

.Spacebox__flat-t { padding-top: 0 !important; }
.Spacebox__flat-b { padding-bottom: 0 !important; }

.Grid {
	list-style: none;
	@include clearfix;
}
// Mobile first approach
@media (min-width: 992px) {
	@for $i from 1 through $gridColumns {
		.Grid__que#{$i} { @include grid-Que($i, width); }
	}

	[class*="Grid__que"] {
		float: #{htmlDirection()};
	}
}

// Responsive, fluid layout
.Flex {
	@include clearfix;
}
.Flex__inline { float: #{htmlDirection()}; }
.Flex__rev { float: #{htmlDirection-rev()}; }
.Flex__fluid {
	display: table-cell;
	width: 1%;
}
.Flex__stretch {
	width: 100%;
	display: table-cell;
}

.flex__vertical {
	display: table;
	border-collapse: collapse;
	width: 100%;
	height: 100%;
}
.flex__vertical-row { display: table-row; }
.flex__vertical-row-stretch {
	display: table-cell;
	width: 100%;
	height: 100%;
}
.flex__vertical-row-fluid {
	display: table-cell;
	width: 100%;
	height: 0;
}

@for $i from 1 through $gridColumns {
	.Flex__preOffset#{$i} {
		.Flex__inline {
			@include grid-Que($i, width);
		}
	}
}
.Ghost {
	&:before {
		content: '';
		display: inline-block;
		height: 100%;
		vertical-align: middle;
		margin-right: -0.25em;
	}
	.Ghost__child-middle {
		vertical-align: middle;
		display: inline-block;
	}
	.Ghost__child-bottom {
		vertical-align: bottom;
		display: inline-block;
	}
}
